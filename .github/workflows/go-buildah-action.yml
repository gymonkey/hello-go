name: Go Build with Red Hat Buildah Action to GHCR

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

env:
  REPO_NAME: ${{ github.repository }} # 仓库名称 (例如：octocat/Spoon-Knife)
  IMAGE_NAME: hello-go # 你的 Docker 镜像名称，请替换
  DOCKERFILE_PATH: ./Dockerfile

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # 授予写入 GHCR 的权限

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        # buildah-build Action 会自动处理登录，但手动登录确保清晰性
        # 也可以在 buildah-build Action 的 inputs 中直接提供 registry 和 credentials
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags) for Image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and Push Go Image with Buildah
        uses: redhat-actions/buildah-build@v2 # 使用 Buildah Action
        with:
          image: ${{ env.IMAGE_NAME }} # 镜像名称
          tags: ${{ steps.meta.outputs.tags }} # 镜像标签
          containerfiles: |
            ${{ env.DOCKERFILE_PATH }} # Dockerfile 路径
          oci: false # 设置为 false，以便生成 Docker 兼容的镜像
          push: true # 推送到注册表
          registry: ghcr.io/${{ github.repository_owner }} # 注册表地址，通常是 ghcr.io/<你的用户名或组织名>